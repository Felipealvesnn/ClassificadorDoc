@model ClassificadorDoc.Controllers.Mvc.DetalhesLoteView

@{
    ViewData["Title"] = "Detalhes do Lote";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">
        <i class="fas fa-archive fa-fw me-2"></i>Detalhes do Lote
    </h1>
    <div>
        <a asp-action="Historico" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Voltar
        </a>
        <button type="button" class="btn btn-outline-primary" onclick="exportarCSV()">
            <i class="fas fa-file-csv"></i> Exportar CSV
        </button>
    </div>
</div>

<!-- Informações do Lote -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-@GetStatusColor(Model.Lote.Status) shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-@GetStatusColor(Model.Lote.Status) text-uppercase mb-1">
                            Status
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @GetStatusDisplayName(Model.Lote.Status)
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-tasks fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Total de Documentos
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @Model.Lote.TotalDocumentos
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-file-alt fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Taxa de Sucesso
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @Model.Lote.TaxaSucesso%
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Tamanho do Arquivo
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @Model.Lote.TamanhoFormatado
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-file-archive fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Informações Adicionais -->
<div class="row mb-4">
    <div class="col-lg-6">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-info-circle me-2"></i>Informações do Processamento
                </h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-6">
                        <p><strong>Data de Processamento:</strong><br>
                        @Model.Lote.DataProcessamento.ToString("dd/MM/yyyy HH:mm:ss")</p>
                    </div>
                    <div class="col-sm-6">
                        <p><strong>Tempo de Processamento:</strong><br>
                        @Model.Lote.TempoFormatado</p>
                    </div>
                    <div class="col-sm-6">
                        <p><strong>Usuário:</strong><br>
                        @(User.Identity?.Name ?? "N/A")</p>
                    </div>
                    <div class="col-sm-6">
                        <p><strong>Arquivo Original:</strong><br>
                        @Model.Lote.NomeLote</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-chart-pie me-2"></i>Distribuição de Tipos
                </h6>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.Lote.TipoPredominante))
                {
                    <p><strong>Tipo Predominante:</strong><br>
                    <span class="badge @GetTipoBadgeClass(Model.Lote.TipoPredominante) fs-6">
                        @GetTipoDisplayName(Model.Lote.TipoPredominante)
                    </span></p>
                }
                
                <div class="small text-muted">
                    <i class="fas fa-info-circle"></i>
                    A distribuição completa pode ser visualizada na tabela de documentos abaixo.
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filtros -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">
            <i class="fas fa-filter me-2"></i>Filtros de Documentos
        </h6>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-2">
                <label for="filtroTipoDoc" class="form-label">Tipo de Documento</label>
                <select class="form-select" id="filtroTipoDoc">
                    <option value="">Todos os tipos</option>
                    <option value="notificacao_autuacao">Autuação</option>
                    <option value="defesa">Defesa</option>
                    <option value="indicacao_condutor">Indicação de Condutor</option>
                    <option value="notificacao_penalidade">Notificação de Penalidade</option>
                    <option value="outros">Outros</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="filtroStatusDoc" class="form-label">Status</label>
                <select class="form-select" id="filtroStatusDoc">
                    <option value="">Todos os status</option>
                    <option value="Completed">Concluído</option>
                    <option value="Failed">Falhou</option>
                    <option value="Processing">Processando</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="filtroAIT" class="form-label">Número AIT</label>
                <input type="text" class="form-control" id="filtroAIT" placeholder="Ex: 123456789">
            </div>
            <div class="col-md-2">
                <label for="filtroPlaca" class="form-label">Placa</label>
                <input type="text" class="form-control" id="filtroPlaca" placeholder="Ex: ABC-1234">
            </div>
            <div class="col-md-2">
                <label for="filtroConfiancaDoc" class="form-label">Confiança Mínima</label>
                <input type="range" class="form-range" id="filtroConfiancaDoc" min="0" max="100" value="0">
                <div class="d-flex justify-content-between">
                    <small>0%</small>
                    <small id="valorConfianca">0%</small>
                    <small>100%</small>
                </div>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <div>
                    <button type="button" class="btn btn-primary me-2" onclick="aplicarFiltrosDoc()">
                        <i class="fas fa-search"></i> Filtrar
                    </button>
                    <button type="button" class="btn btn-outline-secondary" onclick="limparFiltrosDoc()">
                        <i class="fas fa-times"></i> Limpar
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Tabela de Documentos -->
<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">
            <i class="fas fa-file-alt me-2"></i>Documentos do Lote (@Model.Documentos.Count)
        </h6>
        <div class="dropdown no-arrow">
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" 
               data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" 
                 aria-labelledby="dropdownMenuLink">
                <div class="dropdown-header">Exportar:</div>
                <a class="dropdown-item" href="#" onclick="exportarCSV()">
                    <i class="fas fa-file-csv fa-sm fa-fw mr-2 text-gray-400"></i>
                    CSV
                </a>
                <a class="dropdown-item" href="#" onclick="exportarPDF()">
                    <i class="fas fa-file-pdf fa-sm fa-fw mr-2 text-gray-400"></i>
                    PDF
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (Model.Documentos.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Arquivo</th>
                            <th>Tipo Classificado</th>
                            <th>Dados Específicos</th>
                            <th>Confiança</th>
                            <th>Status</th>
                            <th>Data Processamento</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var doc in Model.Documentos.OrderByDescending(d => d.DataProcessamento))
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="@GetFileIcon(doc.NomeArquivo) me-2"></i>
                                        <div>
                                            <div class="fw-bold">@doc.NomeArquivo</div>
                                            <div class="small text-muted">@doc.TamanhoFormatado</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(doc.TipoClassificado))
                                    {
                                        <span class="badge @GetTipoBadgeClass(doc.TipoClassificado)">
                                            @GetTipoDisplayName(doc.TipoClassificado)
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Não identificado</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(doc.DadosEspecificosResumo))
                                    {
                                        <div class="small">
                                            @{
                                                var tipoBadgeClass = "";
                                                var tipoLabel = "";
                                                
                                                if (doc.TipoClassificado?.Contains("indicacao") == true)
                                                {
                                                    tipoBadgeClass = "badge bg-warning text-dark";
                                                    tipoLabel = "Indicação";
                                                }
                                                else if (doc.TipoClassificado?.Contains("defesa") == true)
                                                {
                                                    tipoBadgeClass = "badge bg-primary";
                                                    tipoLabel = "Defesa";
                                                }
                                                else if (doc.TipoClassificado?.Contains("autuacao") == true)
                                                {
                                                    tipoBadgeClass = "badge bg-danger";
                                                    tipoLabel = "Autuação";
                                                }
                                                else
                                                {
                                                    tipoBadgeClass = "badge bg-secondary";
                                                    tipoLabel = "Outros";
                                                }
                                            }
                                            
                                            @if (!string.IsNullOrEmpty(tipoLabel))
                                            {
                                                <div class="mb-2">
                                                    <span class="@tipoBadgeClass" style="font-size: 0.7em;">@tipoLabel</span>
                                                </div>
                                            }
                                            
                                            @foreach (var dado in doc.DadosEspecificosResumo.Split(" | "))
                                            {
                                                <div class="text-muted mb-1">
                                                    <i class="fas fa-tag fa-xs me-1"></i>@dado
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted small">Dados não extraídos</span>
                                    }
                                </td>
                                <td>
                                    @if (doc.Confianca > 0)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="progress me-2" style="width: 60px; height: 20px;">
                                                <div class="progress-bar @GetProgressBarClass(doc.Confianca)"
                                                     role="progressbar" 
                                                     style="width: @(doc.Confianca * 100)%"
                                                     aria-valuenow="@(doc.Confianca * 100)" 
                                                     aria-valuemin="0" 
                                                     aria-valuemax="100"></div>
                                            </div>
                                            <small class="fw-bold">@(doc.Confianca.ToString("P1"))</small>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge @GetStatusBadgeClass(doc.Status)">@GetStatusDisplayName(doc.Status)</span>
                                </td>
                                <td>
                                    <div>@doc.DataProcessamento.ToString("dd/MM/yyyy")</div>
                                    <small class="text-muted">@doc.DataProcessamento.ToString("HH:mm:ss")</small>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-outline-info btn-sm" 
                                                onclick="verDetalhesDoc(@doc.Id)" title="Ver Detalhes Completos">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        @if (!string.IsNullOrEmpty(doc.CaminhoResultado))
                                        {
                                            <button type="button" class="btn btn-outline-success btn-sm"
                                                    onclick="baixarResultadoDoc(@doc.Id)" title="Baixar Resultado">
                                                <i class="fas fa-download"></i>
                                            </button>
                                        }
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <button type="button" class="btn btn-outline-danger btn-sm"
                                                    onclick="excluirDoc(@doc.Id)" title="Excluir">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-file-alt fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">Nenhum documento encontrado</h5>
                <p class="text-muted">Este lote não contém documentos ou houve um erro no processamento.</p>
            </div>
        }
    </div>
</div>

<!-- Modal de Detalhes do Documento -->
<div class="modal fade" id="modalDetalhesDocumento" tabindex="-1" aria-labelledby="modalDetalhesDocumentoLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalDetalhesDocumentoLabel">
                    <i class="fas fa-file-alt me-2"></i>Detalhes do Documento
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalDetalhesConteudo">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                    <p class="mt-2">Carregando detalhes do documento...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Fechar
                </button>
                <button type="button" class="btn btn-primary" id="btnCopiarDados" onclick="copiarDadosDocumento()">
                    <i class="fas fa-copy"></i> Copiar Dados
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let documentoDetalhes = null;

        function aplicarFiltrosDoc() {
            const tipo = document.getElementById('filtroTipoDoc').value;
            const status = document.getElementById('filtroStatusDoc').value;
            const confianca = document.getElementById('filtroConfiancaDoc').value;
            const ait = document.getElementById('filtroAIT').value;
            const placa = document.getElementById('filtroPlaca').value;
            
            console.log('Filtros aplicados:', { tipo, status, confianca, ait, placa });
            
            // Filtrar linhas da tabela
            const tabela = document.getElementById('dataTable');
            const linhas = tabela.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
            
            Array.from(linhas).forEach(linha => {
                let mostrar = true;
                
                // Filtro por tipo
                if (tipo && !linha.cells[1].textContent.toLowerCase().includes(tipo.toLowerCase())) {
                    mostrar = false;
                }
                
                // Filtro por status
                if (status && !linha.cells[4].textContent.includes(status === 'Completed' ? 'Concluído' : 
                    status === 'Failed' ? 'Falhou' : 'Processando')) {
                    mostrar = false;
                }
                
                // Filtro por AIT
                if (ait && !linha.cells[2].textContent.toLowerCase().includes(ait.toLowerCase())) {
                    mostrar = false;
                }
                
                // Filtro por placa
                if (placa && !linha.cells[2].textContent.toLowerCase().includes(placa.toLowerCase())) {
                    mostrar = false;
                }
                
                // Filtro por confiança (implementação básica)
                const confiancaMinima = parseFloat(confianca) / 100;
                // ... implementar lógica de confiança se necessário
                
                linha.style.display = mostrar ? '' : 'none';
            });
        }

        function limparFiltrosDoc() {
            document.getElementById('filtroTipoDoc').value = '';
            document.getElementById('filtroStatusDoc').value = '';
            document.getElementById('filtroConfiancaDoc').value = '0';
            document.getElementById('filtroAIT').value = '';
            document.getElementById('filtroPlaca').value = '';
            document.getElementById('valorConfianca').textContent = '0%';
            
            // Mostrar todas as linhas
            const tabela = document.getElementById('dataTable');
            const linhas = tabela.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
            Array.from(linhas).forEach(linha => {
                linha.style.display = '';
            });
        }

        async function verDetalhesDoc(id) {
            try {
                console.log('🔍 Iniciando carregamento de detalhes para ID:', id);
                
                // Mostrar modal e spinner
                const modal = new bootstrap.Modal(document.getElementById('modalDetalhesDocumento'));
                modal.show();
                
                // Fazer requisição para buscar detalhes
                const response = await fetch(`@Url.Action("DetalhesDocumento", "Classificacao")?id=${id}`);
                
                console.log('📡 Response status:', response.status);
                
                if (!response.ok) {
                    throw new Error('Erro ao carregar detalhes');
                }
                
                documentoDetalhes = await response.json();
                console.log('📄 Dados recebidos:', documentoDetalhes);
                
                // Renderizar conteúdo do modal
                const htmlGerado = gerarHtmlDetalhes(documentoDetalhes);
                console.log('🎨 HTML gerado (primeiros 200 chars):', htmlGerado.substring(0, 200));
                
                document.getElementById('modalDetalhesConteudo').innerHTML = htmlGerado;
                console.log('✅ Modal atualizado com sucesso');
                
            } catch (error) {
                console.error('❌ Erro ao carregar detalhes:', error);
                document.getElementById('modalDetalhesConteudo').innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Erro ao carregar detalhes do documento: ${error.message}
                    </div>
                `;
            }
        }

        function gerarHtmlDetalhes(doc) {
            console.log('🎨 Gerando HTML para documento:', doc);
            
            const tipoDisplayName = getTipoDisplayName(doc.TipoClassificado || doc.tipoClassificado);
            const statusClass = (doc.Sucesso !== undefined ? doc.Sucesso : doc.sucesso) ? 'success' : 'danger';
            const statusText = (doc.Sucesso !== undefined ? doc.Sucesso : doc.sucesso) ? 'Concluído' : 'Falhou';
            
            console.log('📋 Tipo:', doc.TipoClassificado || doc.tipoClassificado);
            console.log('⚡ Status:', statusClass, statusText);
            
            let dadosEspecificos = '';
            
            const tipoDoc = (doc.TipoClassificado || doc.tipoClassificado || '').toLowerCase();
            console.log('🔍 Tipo para verificação:', tipoDoc);
            
            if (tipoDoc.includes('autuacao')) {
                console.log('🚨 Gerando seção de Autuação');
                dadosEspecificos = `
                    <div class="col-md-6">
                        <div class="card border-danger h-100">
                            <div class="card-header bg-danger text-white">
                                <h6 class="mb-0"><i class="fas fa-gavel me-2"></i>Dados da Autuação</h6>
                            </div>
                            <div class="card-body">
                                ${(doc.NumeroAIT || doc.numeroAIT) ? `<p><strong>🎫 Número AIT:</strong> <span class="badge bg-dark">${doc.NumeroAIT || doc.numeroAIT}</span></p>` : ''}
                                ${(doc.PlacaVeiculo || doc.placaVeiculo) ? `<p><strong>🚗 Placa:</strong> <span class="badge bg-primary">${doc.PlacaVeiculo || doc.placaVeiculo}</span></p>` : ''}
                                ${(doc.DataInfracao || doc.dataInfracao) ? `<p><strong>📅 Data da Infração:</strong> ${new Date(doc.DataInfracao || doc.dataInfracao).toLocaleDateString('pt-BR')}</p>` : ''}
                                ${(doc.LocalInfracao || doc.localInfracao) ? `<p><strong>📍 Local:</strong> ${doc.LocalInfracao || doc.localInfracao}</p>` : ''}
                                ${(doc.CodigoInfracao || doc.codigoInfracao) ? `<p><strong>📋 Código CTB:</strong> <span class="badge bg-warning text-dark">${doc.CodigoInfracao || doc.codigoInfracao}</span></p>` : ''}
                                ${(doc.ValorMulta || doc.valorMulta) ? `<p><strong>💰 Valor:</strong> <span class="text-danger fw-bold">R$ ${(doc.ValorMulta || doc.valorMulta).toFixed(2)}</span></p>` : ''}
                                ${(doc.OrgaoAutuador || doc.orgaoAutuador) ? `<p><strong>🏛️ Órgão:</strong> ${doc.OrgaoAutuador || doc.orgaoAutuador}</p>` : ''}
                            </div>
                        </div>
                    </div>
                `;
            } else if (tipoDoc.includes('defesa')) {
                console.log('🛡️ Gerando seção de Defesa');
                dadosEspecificos = `
                    <div class="col-md-6">
                        <div class="card border-primary h-100">
                            <div class="card-header bg-primary text-white">
                                <h6 class="mb-0"><i class="fas fa-shield-alt me-2"></i>Dados da Defesa</h6>
                            </div>
                            <div class="card-body">
                                ${(doc.NumeroAIT || doc.numeroAIT) ? `<p><strong>🎫 Número AIT:</strong> <span class="badge bg-dark">${doc.NumeroAIT || doc.numeroAIT}</span></p>` : ''}
                                ${(doc.PlacaVeiculo || doc.placaVeiculo) ? `<p><strong>🚗 Placa:</strong> <span class="badge bg-primary">${doc.PlacaVeiculo || doc.placaVeiculo}</span></p>` : ''}
                                ${(doc.DataInfracao || doc.dataInfracao) ? `<p><strong>📅 Data da Infração:</strong> ${new Date(doc.DataInfracao || doc.dataInfracao).toLocaleDateString('pt-BR')}</p>` : ''}
                                ${(doc.LocalInfracao || doc.localInfracao) ? `<p><strong>📍 Local:</strong> ${doc.LocalInfracao || doc.localInfracao}</p>` : ''}
                                ${(doc.ValorMulta || doc.valorMulta) ? `<p><strong>💰 Valor:</strong> <span class="text-danger fw-bold">R$ ${(doc.ValorMulta || doc.valorMulta).toFixed(2)}</span></p>` : ''}
                                ${(doc.TextoDefesa || doc.textoDefesa) ? `
                                    <div class="mt-3">
                                        <p><strong>📝 Texto da Defesa:</strong></p>
                                        <div class="border p-3 bg-light rounded" style="max-height: 150px; overflow-y: auto;">
                                            <small class="text-muted">${doc.TextoDefesa || doc.textoDefesa}</small>
                                        </div>
                                    </div>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                `;
            } else if (tipoDoc.includes('indicacao')) {
                console.log('👤 Gerando seção de Indicação');
                dadosEspecificos = `
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="card border-warning h-100">
                                    <div class="card-header bg-warning text-dark">
                                        <h6 class="mb-0"><i class="fas fa-user me-2"></i>Dados do Requerente (Proprietário)</h6>
                                    </div>
                                    <div class="card-body">
                                        ${(doc.RequerenteNome || doc.requerenteNome) ? `<p><strong>👤 Nome:</strong> <span class="fw-bold text-primary">${doc.RequerenteNome || doc.requerenteNome}</span></p>` : ''}
                                        ${(doc.RequerenteCPF || doc.requerenteCPF) ? `<p><strong>🆔 CPF:</strong> <span class="badge bg-primary">${doc.RequerenteCPF || doc.requerenteCPF}</span></p>` : ''}
                                        ${(doc.RequerenteRG || doc.requerenteRG) ? `<p><strong>📄 RG:</strong> <span class="badge bg-secondary">${doc.RequerenteRG || doc.requerenteRG}</span></p>` : ''}
                                        ${(doc.RequerenteEndereco || doc.requerenteEndereco) ? `<p><strong>🏠 Endereço:</strong> <small class="text-muted">${doc.RequerenteEndereco || doc.requerenteEndereco}</small></p>` : ''}
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card border-success h-100">
                                    <div class="card-header bg-success text-white">
                                        <h6 class="mb-0"><i class="fas fa-user-tag me-2"></i>Dados da Indicação (Condutor)</h6>
                                    </div>
                                    <div class="card-body">
                                        ${(doc.IndicacaoNome || doc.indicacaoNome) ? `<p><strong>👤 Nome:</strong> <span class="fw-bold text-success">${doc.IndicacaoNome || doc.indicacaoNome}</span></p>` : ''}
                                        ${(doc.IndicacaoCPF || doc.indicacaoCPF) ? `<p><strong>🆔 CPF:</strong> <span class="badge bg-success">${doc.IndicacaoCPF || doc.indicacaoCPF}</span></p>` : ''}
                                        ${(doc.IndicacaoRG || doc.indicacaoRG) ? `<p><strong>📄 RG:</strong> <span class="badge bg-info">${doc.IndicacaoRG || doc.indicacaoRG}</span></p>` : ''}
                                        ${(doc.IndicacaoCNH || doc.indicacaoCNH) ? `<p><strong>🚗 CNH:</strong> <span class="badge bg-warning text-dark">${doc.IndicacaoCNH || doc.indicacaoCNH}</span></p>` : ''}
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <div class="card border-dark">
                                    <div class="card-header bg-dark text-white">
                                        <h6 class="mb-0"><i class="fas fa-gavel me-2"></i>Dados da Infração</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-4">
                                                ${(doc.NumeroAIT || doc.numeroAIT) ? `<p><strong>🎫 Número AIT:</strong> <span class="badge bg-dark">${doc.NumeroAIT || doc.numeroAIT}</span></p>` : ''}
                                                ${(doc.PlacaVeiculo || doc.placaVeiculo) ? `<p><strong>🚗 Placa:</strong> <span class="badge bg-primary">${doc.PlacaVeiculo || doc.placaVeiculo}</span></p>` : ''}
                                            </div>
                                            <div class="col-md-4">
                                                ${(doc.DataInfracao || doc.dataInfracao) ? `<p><strong>📅 Data:</strong> ${new Date(doc.DataInfracao || doc.dataInfracao).toLocaleDateString('pt-BR')}</p>` : ''}
                                                ${(doc.CodigoInfracao || doc.codigoInfracao) ? `<p><strong>📋 Código:</strong> <span class="badge bg-warning text-dark">${doc.CodigoInfracao || doc.codigoInfracao}</span></p>` : ''}
                                            </div>
                                            <div class="col-md-4">
                                                ${(doc.ValorMulta || doc.valorMulta) ? `<p><strong>💰 Valor:</strong> <span class="text-danger fw-bold">R$ ${(doc.ValorMulta || doc.valorMulta).toFixed(2)}</span></p>` : ''}
                                                ${(doc.OrgaoAutuador || doc.orgaoAutuador) ? `<p><strong>🏛️ Órgão:</strong> <small>${doc.OrgaoAutuador || doc.orgaoAutuador}</small></p>` : ''}
                                            </div>
                                        </div>
                                        ${(doc.LocalInfracao || doc.localInfracao) ? `<p class="mt-2"><strong>📍 Local:</strong> <em>${doc.LocalInfracao || doc.localInfracao}</em></p>` : ''}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            } else if (tipoDoc.includes('notificacao')) {
                console.log('📧 Gerando seção de Notificação');
                dadosEspecificos = `
                    <div class="col-md-6">
                        <div class="card border-info h-100">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0"><i class="fas fa-bell me-2"></i>Dados da Notificação</h6>
                            </div>
                            <div class="card-body">
                                ${(doc.NumeroAIT || doc.numeroAIT) ? `<p><strong>🎫 Número AIT:</strong> <span class="badge bg-dark">${doc.NumeroAIT || doc.numeroAIT}</span></p>` : ''}
                                ${(doc.PlacaVeiculo || doc.placaVeiculo) ? `<p><strong>🚗 Placa:</strong> <span class="badge bg-primary">${doc.PlacaVeiculo || doc.placaVeiculo}</span></p>` : ''}
                                ${(doc.DataInfracao || doc.dataInfracao) ? `<p><strong>📅 Data da Infração:</strong> ${new Date(doc.DataInfracao || doc.dataInfracao).toLocaleDateString('pt-BR')}</p>` : ''}
                                ${(doc.LocalInfracao || doc.localInfracao) ? `<p><strong>📍 Local:</strong> ${doc.LocalInfracao || doc.localInfracao}</p>` : ''}
                                ${(doc.CodigoInfracao || doc.codigoInfracao) ? `<p><strong>📋 Código CTB:</strong> <span class="badge bg-warning text-dark">${doc.CodigoInfracao || doc.codigoInfracao}</span></p>` : ''}
                                ${(doc.ValorMulta || doc.valorMulta) ? `<p><strong>💰 Valor da Multa:</strong> <span class="text-danger fw-bold fs-5">R$ ${(doc.ValorMulta || doc.valorMulta).toFixed(2)}</span></p>` : ''}
                                ${(doc.OrgaoAutuador || doc.orgaoAutuador) ? `<p><strong>🏛️ Órgão:</strong> ${doc.OrgaoAutuador || doc.orgaoAutuador}</p>` : ''}
                            </div>
                        </div>
                    </div>
                `;
            } else {
                console.log('📑 Gerando seção geral');
                // Para outros tipos ou quando há dados gerais
                const temDadosEspecificos = (doc.NumeroAIT || doc.numeroAIT) || 
                                          (doc.PlacaVeiculo || doc.placaVeiculo) || 
                                          (doc.NomeCondutor || doc.nomeCondutor) || 
                                          (doc.ValorMulta || doc.valorMulta);
                if (temDadosEspecificos) {
                    dadosEspecificos = `
                        <div class="col-md-6">
                            <div class="card border-secondary h-100">
                                <div class="card-header bg-secondary text-white">
                                    <h6 class="mb-0"><i class="fas fa-info-circle me-2"></i>Dados Extraídos</h6>
                                </div>
                                <div class="card-body">
                                    ${(doc.NumeroAIT || doc.numeroAIT) ? `<p><strong>🎫 Número AIT:</strong> <span class="badge bg-dark">${doc.NumeroAIT || doc.numeroAIT}</span></p>` : ''}
                                    ${(doc.PlacaVeiculo || doc.placaVeiculo) ? `<p><strong>🚗 Placa:</strong> <span class="badge bg-primary">${doc.PlacaVeiculo || doc.placaVeiculo}</span></p>` : ''}
                                    ${(doc.NomeCondutor || doc.nomeCondutor) ? `<p><strong>👤 Nome do Condutor:</strong> ${doc.NomeCondutor || doc.nomeCondutor}</p>` : ''}
                                    ${(doc.NumeroCNH || doc.numeroCNH) ? `<p><strong>🆔 CNH:</strong> <span class="badge bg-info">${doc.NumeroCNH || doc.numeroCNH}</span></p>` : ''}
                                    ${(doc.DataInfracao || doc.dataInfracao) ? `<p><strong>📅 Data da Infração:</strong> ${new Date(doc.DataInfracao || doc.dataInfracao).toLocaleDateString('pt-BR')}</p>` : ''}
                                    ${(doc.LocalInfracao || doc.localInfracao) ? `<p><strong>📍 Local:</strong> ${doc.LocalInfracao || doc.localInfracao}</p>` : ''}
                                    ${(doc.CodigoInfracao || doc.codigoInfracao) ? `<p><strong>📋 Código CTB:</strong> <span class="badge bg-warning text-dark">${doc.CodigoInfracao || doc.codigoInfracao}</span></p>` : ''}
                                    ${(doc.ValorMulta || doc.valorMulta) ? `<p><strong>💰 Valor:</strong> <span class="text-danger fw-bold">R$ ${(doc.ValorMulta || doc.valorMulta).toFixed(2)}</span></p>` : ''}
                                    ${(doc.OrgaoAutuador || doc.orgaoAutuador) ? `<p><strong>🏛️ Órgão:</strong> ${doc.OrgaoAutuador || doc.orgaoAutuador}</p>` : ''}
                                </div>
                            </div>
                        </div>
                    `;
                }
            }
            
            console.log('🎯 Dados específicos gerados:', dadosEspecificos ? 'SIM' : 'NÃO');
            
            const confiancaPercentual = doc.ConfiancaPercentual || doc.confiancaPercentual || 0;
            const nomeArquivo = doc.NomeArquivo || doc.nomeArquivo || 'N/A';
            const tamanhoFormatado = doc.TamanhoFormatado || doc.tamanhoFormatado || 'N/A';
            const dataProcessamentoFormatada = doc.DataProcessamentoFormatada || doc.dataProcessamentoFormatada || 'N/A';
            const mensagemErro = doc.MensagemErro || doc.mensagemErro;
            const palavrasChave = doc.PalavrasChave || doc.palavrasChave;
            const textoCompleto = doc.TextoCompleto || doc.textoCompleto;
            
            return `
                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header bg-light">
                                <h6 class="mb-0"><i class="fas fa-info-circle me-2 text-primary"></i>Informações Gerais</h6>
                            </div>
                            <div class="card-body">
                                <p><strong>📄 Arquivo:</strong> <code class="bg-light p-1 rounded">${nomeArquivo}</code></p>
                                <p><strong>📋 Tipo:</strong> 
                                    <span class="badge ${getTipoBadgeClass(doc.TipoClassificado || doc.tipoClassificado)} fs-6">${tipoDisplayName}</span>
                                </p>
                                <p><strong>⚡ Status:</strong> 
                                    <span class="badge bg-${statusClass} fs-6">${statusText}</span>
                                </p>
                                <p><strong>🎯 Confiança:</strong> 
                                    <span class="badge ${confiancaPercentual >= 80 ? 'bg-success' : confiancaPercentual >= 60 ? 'bg-warning text-dark' : 'bg-danger'} fs-6">
                                        ${confiancaPercentual}%
                                    </span>
                                </p>
                                <p><strong>📏 Tamanho:</strong> <span class="text-muted">${tamanhoFormatado}</span></p>
                                <p><strong>🕒 Processado:</strong> <span class="text-muted">${dataProcessamentoFormatada}</span></p>
                                ${mensagemErro ? `
                                    <div class="alert alert-danger p-2 mt-2">
                                        <small><strong>❌ Erro:</strong> ${mensagemErro}</small>
                                    </div>
                                ` : ''}
                                ${palavrasChave ? `
                                    <div class="mt-2">
                                        <strong>🔍 Palavras-chave:</strong><br>
                                        <small class="text-info">${palavrasChave}</small>
                                    </div>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                    ${dadosEspecificos}
                </div>
                
                ${textoCompleto ? `
                    <div class="card mb-3">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">
                                <i class="fas fa-file-text me-2 text-success"></i>Texto Completo Extraído
                                <span class="badge bg-secondary ms-2">${textoCompleto.length} caracteres</span>
                            </h6>
                            <button class="btn btn-sm btn-outline-secondary" onclick="copiarTextoCompleto()" title="Copiar texto completo">
                                <i class="fas fa-copy"></i>
                            </button>
                        </div>
                        <div class="card-body p-0">
                            <div class="border-0 p-3 bg-light" style="max-height: 300px; overflow-y: auto; white-space: pre-wrap; font-family: 'Courier New', monospace; font-size: 0.85em; line-height: 1.4;">
${textoCompleto}
                            </div>
                        </div>
                    </div>
                ` : `
                    <div class="card">
                        <div class="card-body text-center text-muted">
                            <i class="fas fa-file-text fa-3x mb-3 opacity-25"></i>
                            <p>Nenhum texto extraído disponível para este documento.</p>
                        </div>
                    </div>
                `}
            `;
        }

        function getTipoDisplayName(tipo) {
            switch(tipo) {
                case 'autuacao': return 'Auto de Infração (AIT)';
                case 'notificacao_autuacao': return 'Notificação de Autuação';
                case 'notificacao_penalidade': return 'Notificação de Penalidade';
                case 'defesa': return 'Defesa de Autuação';
                case 'indicacao_condutor': return 'Indicação de Condutor';
                default: return 'Outros Documentos';
            }
        }

        function getTipoBadgeClass(tipo) {
            switch(tipo) {
                case 'autuacao': return 'bg-danger';
                case 'notificacao_autuacao': return 'bg-warning text-dark';
                case 'notificacao_penalidade': return 'bg-info';
                case 'defesa': return 'bg-primary';
                case 'indicacao_condutor': return 'bg-success';
                default: return 'bg-secondary';
            }
        }

        function copiarDadosDocumento() {
            if (!documentoDetalhes) return;
            
            let dadosParaCopiar = `📄 DETALHES DO DOCUMENTO\n`;
            dadosParaCopiar += `${'='.repeat(50)}\n\n`;
            
            dadosParaCopiar += `📄 Arquivo: ${documentoDetalhes.NomeArquivo}\n`;
            dadosParaCopiar += `📋 Tipo: ${getTipoDisplayName(documentoDetalhes.TipoClassificado)}\n`;
            dadosParaCopiar += `🎯 Confiança: ${documentoDetalhes.ConfiancaPercentual}%\n`;
            dadosParaCopiar += `⚡ Status: ${documentoDetalhes.Sucesso ? 'Concluído' : 'Falhou'}\n`;
            dadosParaCopiar += `🕒 Processado: ${documentoDetalhes.DataProcessamentoFormatada}\n\n`;
            
            dadosParaCopiar += `📊 DADOS ESPECÍFICOS:\n`;
            dadosParaCopiar += `${'-'.repeat(30)}\n`;
            
            // Dados da infração
            if (documentoDetalhes.NumeroAIT) dadosParaCopiar += `🎫 AIT: ${documentoDetalhes.NumeroAIT}\n`;
            if (documentoDetalhes.PlacaVeiculo) dadosParaCopiar += `🚗 Placa: ${documentoDetalhes.PlacaVeiculo}\n`;
            if (documentoDetalhes.DataInfracao) dadosParaCopiar += `📅 Data Infração: ${new Date(documentoDetalhes.DataInfracao).toLocaleDateString('pt-BR')}\n`;
            if (documentoDetalhes.LocalInfracao) dadosParaCopiar += `📍 Local: ${documentoDetalhes.LocalInfracao}\n`;
            if (documentoDetalhes.CodigoInfracao) dadosParaCopiar += `� Código CTB: ${documentoDetalhes.CodigoInfracao}\n`;
            if (documentoDetalhes.ValorMulta) dadosParaCopiar += `💰 Valor: R$ ${documentoDetalhes.ValorMulta.toFixed(2)}\n`;
            if (documentoDetalhes.OrgaoAutuador) dadosParaCopiar += `🏛️ Órgão: ${documentoDetalhes.OrgaoAutuador}\n`;
            
            // Dados do requerente (para indicação de condutor)
            if (documentoDetalhes.RequerenteNome || documentoDetalhes.RequerenteCPF || documentoDetalhes.RequerenteRG) {
                dadosParaCopiar += `\n👤 DADOS DO REQUERENTE (PROPRIETÁRIO):\n`;
                dadosParaCopiar += `${'-'.repeat(40)}\n`;
                if (documentoDetalhes.RequerenteNome) dadosParaCopiar += `📝 Nome: ${documentoDetalhes.RequerenteNome}\n`;
                if (documentoDetalhes.RequerenteCPF) dadosParaCopiar += `🆔 CPF: ${documentoDetalhes.RequerenteCPF}\n`;
                if (documentoDetalhes.RequerenteRG) dadosParaCopiar += `� RG: ${documentoDetalhes.RequerenteRG}\n`;
                if (documentoDetalhes.RequerenteEndereco) dadosParaCopiar += `🏠 Endereço: ${documentoDetalhes.RequerenteEndereco}\n`;
            }
            
            // Dados da indicação (para indicação de condutor)
            if (documentoDetalhes.IndicacaoNome || documentoDetalhes.IndicacaoCPF || documentoDetalhes.IndicacaoRG || documentoDetalhes.IndicacaoCNH) {
                dadosParaCopiar += `\n🚗 DADOS DA INDICAÇÃO (CONDUTOR):\n`;
                dadosParaCopiar += `${'-'.repeat(40)}\n`;
                if (documentoDetalhes.IndicacaoNome) dadosParaCopiar += `� Nome: ${documentoDetalhes.IndicacaoNome}\n`;
                if (documentoDetalhes.IndicacaoCPF) dadosParaCopiar += `🆔 CPF: ${documentoDetalhes.IndicacaoCPF}\n`;
                if (documentoDetalhes.IndicacaoRG) dadosParaCopiar += `� RG: ${documentoDetalhes.IndicacaoRG}\n`;
                if (documentoDetalhes.IndicacaoCNH) dadosParaCopiar += `� CNH: ${documentoDetalhes.IndicacaoCNH}\n`;
            }
            
            // Dados legados (retrocompatibilidade)
            if (documentoDetalhes.NomeCondutor) dadosParaCopiar += `👤 Condutor: ${documentoDetalhes.NomeCondutor}\n`;
            if (documentoDetalhes.NumeroCNH) dadosParaCopiar += `🆔 CNH: ${documentoDetalhes.NumeroCNH}\n`;
            if (documentoDetalhes.TextoDefesa) dadosParaCopiar += `📝 Defesa: ${documentoDetalhes.TextoDefesa}\n`;
            
            if (documentoDetalhes.PalavrasChave) {
                dadosParaCopiar += `\n🔍 PALAVRAS-CHAVE:\n`;
                dadosParaCopiar += `${'-'.repeat(30)}\n`;
                dadosParaCopiar += `${documentoDetalhes.PalavrasChave}\n`;
            }
            
            navigator.clipboard.writeText(dadosParaCopiar).then(() => {
                mostrarFeedbackCopia('btnCopiarDados', 'Dados copiados!');
            });
        }

        function copiarTextoCompleto() {
            if (!documentoDetalhes || !documentoDetalhes.TextoCompleto) return;
            
            navigator.clipboard.writeText(documentoDetalhes.TextoCompleto).then(() => {
                // Encontrar o botão de copiar texto (pode estar em qualquer elemento)
                const btn = event.target.closest('button');
                if (btn) {
                    const originalHtml = btn.innerHTML;
                    btn.innerHTML = '<i class="fas fa-check text-success"></i>';
                    btn.classList.add('btn-success');
                    btn.classList.remove('btn-outline-secondary');
                    
                    setTimeout(() => {
                        btn.innerHTML = originalHtml;
                        btn.classList.remove('btn-success');
                        btn.classList.add('btn-outline-secondary');
                    }, 2000);
                }
            });
        }

        function mostrarFeedbackCopia(btnId, mensagem) {
            const btn = document.getElementById(btnId);
            if (!btn) return;
            
            const originalText = btn.innerHTML;
            btn.innerHTML = `<i class="fas fa-check"></i> ${mensagem}`;
            btn.classList.remove('btn-primary');
            btn.classList.add('btn-success');
            
            setTimeout(() => {
                btn.innerHTML = originalText;
                btn.classList.remove('btn-success');
                btn.classList.add('btn-primary');
            }, 2000);
        }

        function baixarResultadoDoc(id) {
            window.location.href = `@Url.Action("BaixarResultado", "Classificacao")?id=${id}`;
        }

        function excluirDoc(id) {
            if (confirm('Tem certeza que deseja excluir este documento?')) {
                // Implementar exclusão
                alert(`Excluir documento ${id} (Em desenvolvimento)`);
            }
        }

        function exportarCSV() {
            window.location.href = '@Url.Action("ExportarCSV", "Classificacao")?loteId=@Model.Lote.BatchId';
        }

        function exportarPDF() {
            window.location.href = '@Url.Action("ExportarPDF", "Classificacao")?loteId=@Model.Lote.BatchId';
        }

        // Atualizar valor do range de confiança
        document.getElementById('filtroConfiancaDoc').addEventListener('input', function(e) {
            const valor = e.target.value;
            document.getElementById('valorConfianca').textContent = valor + '%';
        });
    </script>
}

@functions {
    private static string GetStatusColor(string status)
    {
        return status switch
        {
            "Completed" => "success",
            "Failed" => "danger", 
            "Processing" => "warning",
            _ => "secondary"
        };
    }

    private static string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Completed" => "bg-success",
            "Failed" => "bg-danger",
            "Processing" => "bg-warning text-dark",
            _ => "bg-secondary"
        };
    }

    private static string GetStatusDisplayName(string status)
    {
        return status switch
        {
            "Completed" => "Concluído",
            "Failed" => "Falhou",
            "Processing" => "Processando",
            _ => "Desconhecido"
        };
    }

    private static string GetTipoBadgeClass(string? tipo)
    {
        return tipo switch
        {
            "notificacao_autuacao" => "bg-danger",
            "defesa" => "bg-primary",
            "indicacao_condutor" => "bg-warning text-dark",
            "notificacao_penalidade" => "bg-info",
            "outros" => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    private static string GetTipoDisplayName(string? tipo)
    {
        return tipo switch
        {
            "notificacao_autuacao" => "Autuação",
            "defesa" => "Defesa",
            "indicacao_condutor" => "Indicação de Condutor",
            "notificacao_penalidade" => "Notificação de Penalidade",
            "outros" => "Outros",
            _ => "Não Identificado"
        };
    }

    private static string GetFileIcon(string fileName)
    {
        var extension = System.IO.Path.GetExtension(fileName).ToLowerInvariant();
        return extension switch
        {
            ".pdf" => "fas fa-file-pdf text-danger",
            ".zip" => "fas fa-file-archive text-warning",
            ".doc" or ".docx" => "fas fa-file-word text-primary",
            ".xls" or ".xlsx" => "fas fa-file-excel text-success",
            _ => "fas fa-file text-secondary"
        };
    }

    private static string GetProgressBarClass(decimal confianca)
    {
        return confianca switch
        {
            >= 0.9m => "bg-success",
            >= 0.7m => "bg-warning",
            _ => "bg-danger"
        };
    }
}
