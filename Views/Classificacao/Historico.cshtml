@model List<ClassificadorDoc.Controllers.Mvc.HistoricoLoteView>
@{
    ViewData["Title"] = "Histórico de Lotes";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Histórico de Lotes de Documentos</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a asp-action="Upload" class="btn btn-sm btn-primary">
                <i class="fas fa-upload"></i> Novo Lote
            </a>
            <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle dropdown-toggle-split"
                data-bs-toggle="dropdown">
                <span class="visually-hidden">Toggle Dropdown</span>
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" onclick="exportarCSV()">
                        <i class="fas fa-file-csv"></i> Exportar CSV
                    </a></li>
                <li><a class="dropdown-item" href="#" onclick="exportarPDF()">
                        <i class="fas fa-file-pdf"></i> Exportar PDF
                    </a></li>
            </ul>
        </div>
    </div>
</div>

<!-- Filtros -->
<div class="card mb-4">
    <div class="card-body">
        <form class="row g-3">
            <div class="col-md-3">
                <label for="filtroStatus" class="form-label">Status do Lote</label>
                <select class="form-select" id="filtroStatus">
                    <option value="">Todos os status</option>
                    <option value="Completed">Concluído</option>
                    <option value="Failed">Falhou</option>
                    <option value="Processing">Processando</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="filtroTipo" class="form-label">Tipo Predominante</label>
                <select class="form-select" id="filtroTipo">
                    <option value="">Todos os tipos</option>
                    <option value="autuacao">Autuação</option>
                    <option value="defesa">Defesa</option>
                    <option value="notificacao_penalidade">Notificação de Penalidade</option>
                    <option value="outros">Outros</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="filtroDataInicio" class="form-label">Data Início</label>
                <input type="date" class="form-control" id="filtroDataInicio">
            </div>
            <div class="col-md-3">
                <label for="filtroDataFim" class="form-label">Data Fim</label>
                <input type="date" class="form-control" id="filtroDataFim">
            </div>
            <div class="col-md-3">
                <label for="filtroConfianca" class="form-label">Confiança Mínima</label>
                <select class="form-select" id="filtroConfianca">
                    <option value="">Qualquer</option>
                    <option value="90">90% ou mais</option>
                    <option value="80">80% ou mais</option>
                    <option value="70">70% ou mais</option>
                </select>
            </div>
            <div class="col-12">
                <button type="button" class="btn btn-primary" onclick="aplicarFiltros()">
                    <i class="fas fa-filter"></i> Aplicar Filtros
                </button>
                <button type="button" class="btn btn-outline-secondary" onclick="limparFiltros()">
                    <i class="fas fa-times"></i> Limpar
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Resumo -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <i class="fas fa-archive fa-2x text-primary mb-2"></i>
                <h5 class="card-title">@Model.Count</h5>
                <p class="card-text text-muted">Total de Lotes</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <i class="fas fa-file-alt fa-2x text-info mb-2"></i>
                <h5 class="card-title">@Model.Sum(m => m.TotalDocumentos)</h5>
                <p class="card-text text-muted">Total de Documentos</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <i class="fas fa-check-circle fa-2x text-success mb-2"></i>
                <h5 class="card-title">@(Model.Any() ? Model.Average(m => m.ConfiancaMedia * 100).ToString("F1") : "0")%</h5>
                <p class="card-text text-muted">Confiança Média</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <i class="fas fa-clock fa-2x text-warning mb-2"></i>
                <h5 class="card-title">@(Model.Any() ? Model.Max(m => m.DataProcessamento).ToString("dd/MM") : "N/A")</h5>
                <p class="card-text text-muted">Último Processamento</p>
            </div>
        </div>
    </div>
</div>

<!-- Lista de Lotes -->
<div class="card shadow">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Lotes Processados</h6>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="row">
                @foreach (var lote in Model.OrderByDescending(m => m.DataProcessamento))
                {
                    <div class="col-lg-6 col-xl-4 mb-4">
                        <div class="card h-100 border-left-@GetStatusColor(lote.Status)">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="card-title text-truncate" style="max-width: 200px;" title="@lote.NomeLote">
                                        <i class="fas fa-archive me-2"></i>@lote.NomeLote
                                    </h6>
                                    <span class="badge @GetStatusBadgeClass(lote.Status)">@GetStatusDisplayName(lote.Status)</span>
                                </div>
                                
                                <div class="row text-center mb-3">
                                    <div class="col-4">
                                        <div class="h6 mb-0 text-primary">@lote.TotalDocumentos</div>
                                        <small class="text-muted">Docs</small>
                                    </div>
                                    <div class="col-4">
                                        <div class="h6 mb-0 text-success">@lote.DocumentosSucesso</div>
                                        <small class="text-muted">Sucesso</small>
                                    </div>
                                    <div class="col-4">
                                        <div class="h6 mb-0 text-info">@lote.TaxaSucesso%</div>
                                        <small class="text-muted">Taxa</small>
                                    </div>
                                </div>

                                @if (!string.IsNullOrEmpty(lote.TipoPredominante))
                                {
                                    <div class="text-center mb-2">
                                        <span class="badge @GetTipoBadgeClass(lote.TipoPredominante) fs-6">
                                            @GetTipoDisplayName(lote.TipoPredominante)
                                        </span>
                                    </div>
                                }

                                <div class="text-muted small mb-3">
                                    <div><i class="fas fa-calendar me-1"></i>@lote.DataProcessamento.ToString("dd/MM/yyyy HH:mm")</div>
                                    <div><i class="fas fa-clock me-1"></i>@lote.TempoFormatado</div>
                                    <div><i class="fas fa-file-archive me-1"></i>@lote.TamanhoFormatado</div>
                                    <div><i class="fas fa-chart-line me-1"></i>@((lote.ConfiancaMedia * 100).ToString("F1"))% confiança</div>
                                </div>

                                <div class="d-grid">
                                    <a asp-action="DetalhesLote" asp-route-id="@lote.BatchId" class="btn btn-outline-primary btn-sm">
                                        <i class="fas fa-eye me-1"></i>Ver Documentos (@lote.TotalDocumentos)
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Paginação -->
            @if (Model.Count >= 20)
            {
                <div class="d-flex justify-content-center mt-4">
                    <button class="btn btn-outline-primary" onclick="carregarMais()">
                        <i class="fas fa-plus"></i> Carregar Mais Lotes
                    </button>
                </div>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-archive fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">Nenhum lote encontrado</h5>
                <p class="text-muted">Você ainda não processou nenhum lote de documentos.</p>
                <a asp-action="Upload" class="btn btn-primary">
                    <i class="fas fa-upload"></i> Processar Primeiro Lote
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function aplicarFiltros() {
            // Implementar lógica de filtros
            console.log('Aplicando filtros...');
        }

        function limparFiltros() {
            document.getElementById('filtroStatus').value = '';
            document.getElementById('filtroTipo').value = '';
            document.getElementById('filtroDataInicio').value = '';
            document.getElementById('filtroDataFim').value = '';
        }

        function carregarMais() {
            // Implementar paginação
            console.log('Carregando mais lotes...');
        }

        function exportarCSV() {
            window.location.href = '@Url.Action("ExportarCSV", "Classificacao")';
        }

        function exportarPDF() {
            window.location.href = '@Url.Action("ExportarPDF", "Classificacao")';
        }
    </script>
}

@functions {
    private static string GetStatusColor(string status)
    {
        return status switch
        {
            "Completed" => "success",
            "Failed" => "danger",
            "Processing" => "warning",
            _ => "secondary"
        };
    }

    private static string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Completed" => "bg-success",
            "Failed" => "bg-danger",
            "Processing" => "bg-warning text-dark",
            _ => "bg-secondary"
        };
    }

    private static string GetStatusDisplayName(string status)
    {
        return status switch
        {
            "Completed" => "Concluído",
            "Failed" => "Falhou",
            "Processing" => "Processando",
            _ => "Desconhecido"
        };
    }

    private static string GetTipoBadgeClass(string? tipo)
    {
        return tipo switch
        {
            "autuacao" => "bg-danger",
            "defesa" => "bg-primary",
            "notificacao_penalidade" => "bg-warning text-dark",
            "outros" => "bg-info",
            _ => "bg-secondary"
        };
    }

    private static string GetTipoDisplayName(string? tipo)
    {
        return tipo switch
        {
            "autuacao" => "Autuação",
            "defesa" => "Defesa",
            "notificacao_penalidade" => "Notificação de Penalidade",
            "outros" => "Outros",
            _ => "Não Identificado"
        };
    }

    private string GetProgressBarClass(decimal confianca)
    {
        return confianca switch
        {
            >= 0.9m => "bg-success",
            >= 0.7m => "bg-warning",
            _ => "bg-danger"
        };
    }
}
