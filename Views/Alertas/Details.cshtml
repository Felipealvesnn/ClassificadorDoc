@model ClassificadorDoc.Models.AutomatedAlert
@{
    ViewData["Title"] = "Detalhes do Alerta";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-eye"></i> Detalhes do Alerta
                    </h4>
                    <div class="btn-group">
                        <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-outline-primary">
                            <i class="fas fa-edit"></i> Editar
                        </a>
                        <form method="post" action="@Url.Action("Test", new { id = Model.Id })" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-outline-secondary">
                                <i class="fas fa-play-circle"></i> Testar Alerta
                            </button>
                        </form>
                        <form method="post" action="@Url.Action("Toggle", new { id = Model.Id })" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-outline-@(Model.IsActive ? "warning" : "success")">
                                <i class="fas fa-@(Model.IsActive ? "pause" : "play")"></i> @(Model.IsActive ? "Desativar" : "Ativar")
                            </button>
                        </form>
                    </div>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["InfoMessage"] != null)
                    {
                        <div class="alert alert-info alert-dismissible fade show" role="alert">
                            <i class="fas fa-info-circle"></i> @TempData["InfoMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-8">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">
                                        <i class="fas fa-info-circle"></i> Informações Gerais
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <dl class="row">
                                        <dt class="col-sm-3">
                                            <i class="fas fa-tag"></i> Nome:
                                        </dt>
                                        <dd class="col-sm-9">
                                            <strong>@Model.Name</strong>
                                        </dd>

                                        <dt class="col-sm-3">
                                            <i class="fas fa-info"></i> Descrição:
                                        </dt>
                                        <dd class="col-sm-9">
                                            @(string.IsNullOrEmpty(Model.Description) ? "Sem descrição" : Model.Description)
                                        </dd>

                                        <dt class="col-sm-3">
                                            <i class="fas fa-bell"></i> Tipo:
                                        </dt>
                                        <dd class="col-sm-9">
                                            @switch (Model.AlertType)
                                            {
                                                case "EMAIL":
                                                    <span class="badge bg-primary"><i class="fas fa-envelope"></i> Email</span>
                                                    break;
                                                case "SYSTEM":
                                                    <span class="badge bg-info"><i class="fas fa-desktop"></i> Sistema</span>
                                                    break;
                                                case "WEBHOOK":
                                                    <span class="badge bg-warning"><i class="fas fa-link"></i> Webhook</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-secondary">@Model.AlertType</span>
                                                    break;
                                            }
                                        </dd>

                                        <dt class="col-sm-3">
                                            <i class="fas fa-exclamation-triangle"></i> Prioridade:
                                        </dt>
                                        <dd class="col-sm-9">
                                            @switch (Model.Priority)
                                            {
                                                case "HIGH":
                                                    <span class="badge bg-danger"><i class="fas fa-exclamation-triangle"></i> Alta</span>
                                                    break;
                                                case "MEDIUM":
                                                    <span class="badge bg-warning"><i class="fas fa-exclamation-circle"></i> Média</span>
                                                    break;
                                                case "LOW":
                                                    <span class="badge bg-success"><i class="fas fa-info-circle"></i> Baixa</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-secondary">@Model.Priority</span>
                                                    break;
                                            }
                                        </dd>

                                        <dt class="col-sm-3">
                                            <i class="fas fa-toggle-on"></i> Status:
                                        </dt>
                                        <dd class="col-sm-9">
                                            @if (Model.IsActive)
                                            {
                                                <span class="badge bg-success"><i class="fas fa-check"></i> Ativo</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary"><i class="fas fa-pause"></i> Inativo</span>
                                            }
                                        </dd>

                                        @if (!string.IsNullOrEmpty(Model.Recipients))
                                        {
                                            <dt class="col-sm-3">
                                                <i class="fas fa-users"></i> Destinatários:
                                            </dt>
                                            <dd class="col-sm-9">
                                                @{
                                                    var recipients = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(Model.Recipients ?? "[]") ?? new List<string>();
                                                }
                                                @foreach (var recipient in recipients)
                                                {
                                                    <span class="badge bg-light text-dark me-1">@recipient</span>
                                                }
                                            </dd>
                                        }
                                    </dl>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">
                                        <i class="fas fa-clock"></i> Informações de Controle
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <dl class="row">
                                        <dt class="col-sm-5">
                                            <i class="fas fa-user"></i> Criado por:
                                        </dt>
                                        <dd class="col-sm-7">
                                            <small>@Model.CreatedBy</small>
                                        </dd>

                                        <dt class="col-sm-5">
                                            <i class="fas fa-calendar"></i> Data de criação:
                                        </dt>
                                        <dd class="col-sm-7">
                                            <small>@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                        </dd>

                                        @if (Model.LastTriggered.HasValue)
                                        {
                                            <dt class="col-sm-5">
                                                <i class="fas fa-bell"></i> Último disparo:
                                            </dt>
                                            <dd class="col-sm-7">
                                                <small>@Model.LastTriggered.Value.ToString("dd/MM/yyyy HH:mm")</small>
                                            </dd>
                                        }

                                        @if (Model.TriggerCount > 0)
                                        {
                                            <dt class="col-sm-5">
                                                <i class="fas fa-chart-line"></i> Total de disparos:
                                            </dt>
                                            <dd class="col-sm-7">
                                                <span class="badge bg-info">@Model.TriggerCount</span>
                                            </dd>
                                        }
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">
                                        <i class="fas fa-filter"></i> Condição do Alerta
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <div class="bg-light p-3 rounded">
                                        <pre class="mb-0"><code>@Model.Condition</code></pre>
                                    </div>
                                    <div class="mt-3">
                                        <button type="button" class="btn btn-outline-info" id="validateConditionBtn">
                                            <i class="fas fa-check"></i> Validar Condição
                                        </button>
                                        <div id="conditionValidation" class="mt-2"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <a href="@Url.Action("Index")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Voltar à Lista
                        </a>
                        <div>
                            <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-primary">
                                <i class="fas fa-edit"></i> Editar Alerta
                            </a>
                            <form method="post" action="@Url.Action("Delete", new { id = Model.Id })" class="d-inline" onsubmit="return confirm('Tem certeza que deseja excluir este alerta?')">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger">
                                    <i class="fas fa-trash"></i> Excluir
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#validateConditionBtn').click(function() {
                const condition = '@Html.Raw(Html.Encode(Model.Condition))';
                
                $.get('@Url.Action("ValidateCondition")', { condition: condition })
                    .done(function(response) {
                        const validationDiv = $('#conditionValidation');
                        if (response.isValid) {
                            validationDiv.html('<div class="alert alert-success"><i class="fas fa-check"></i> Condição válida!</div>');
                        } else {
                            validationDiv.html('<div class="alert alert-danger"><i class="fas fa-times"></i> ' + response.message + '</div>');
                        }
                    })
                    .fail(function() {
                        $('#conditionValidation').html('<div class="alert alert-warning"><i class="fas fa-exclamation-triangle"></i> Erro ao validar condição</div>');
                    });
            });
        });
    </script>
}

@section Styles {
    <style>
        pre code {
            font-family: 'Courier New', monospace;
            font-size: 0.9em;
            color: #333;
        }
        
        .badge {
            font-size: 0.75em;
        }
        
        dt {
            font-weight: 600;
        }
        
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
    </style>
}
