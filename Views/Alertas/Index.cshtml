@model IEnumerable<ClassificadorDoc.Models.AutomatedAlert>
@{
    ViewData["Title"] = "Gerenciar Alertas";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-bell"></i> Sistema de Alertas Automáticos
                    </h4>
                    <div>
                        <button onclick="testAlertSystem()" class="btn btn-outline-secondary me-2">
                            <i class="fas fa-volume-up"></i> Testar Som
                        </button>
                        <a href="@Url.Action("Create")" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Novo Alerta
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["InfoMessage"] != null)
                    {
                        <div class="alert alert-info alert-dismissible fade show" role="alert">
                            <i class="fas fa-info-circle"></i> @TempData["InfoMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th><i class="fas fa-tag"></i> Nome</th>
                                        <th><i class="fas fa-info"></i> Descrição</th>
                                        <th><i class="fas fa-filter"></i> Condição</th>
                                        <th><i class="fas fa-bell"></i> Tipo</th>
                                        <th><i class="fas fa-exclamation-triangle"></i> Prioridade</th>
                                        <th><i class="fas fa-toggle-on"></i> Status</th>
                                        <th><i class="fas fa-user"></i> Criado por</th>
                                        <th><i class="fas fa-calendar"></i> Data</th>
                                        <th><i class="fas fa-cogs"></i> Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var alerta in Model)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@alerta.Name</strong>
                                            </td>
                                            <td>
                                                <span class="text-muted">@(string.IsNullOrEmpty(alerta.Description) ? "Sem descrição" : alerta.Description)</span>
                                            </td>
                                            <td>
                                                <code class="small">@alerta.Condition</code>
                                            </td>
                                            <td>
                                                @switch (alerta.AlertType)
                                                {
                                                    case "EMAIL":
                                                        <span class="badge bg-primary"><i class="fas fa-envelope"></i> Email</span>
                                                        break;
                                                    case "SYSTEM":
                                                        <span class="badge bg-info"><i class="fas fa-desktop"></i> Sistema</span>
                                                        break;
                                                    case "WEBHOOK":
                                                        <span class="badge bg-warning"><i class="fas fa-link"></i> Webhook</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-secondary">@alerta.AlertType</span>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @switch (alerta.Priority)
                                                {
                                                    case "HIGH":
                                                        <span class="badge bg-danger"><i class="fas fa-exclamation-triangle"></i> Alta</span>
                                                        break;
                                                    case "MEDIUM":
                                                        <span class="badge bg-warning"><i class="fas fa-exclamation-circle"></i> Média</span>
                                                        break;
                                                    case "LOW":
                                                        <span class="badge bg-success"><i class="fas fa-info-circle"></i> Baixa</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-secondary">@alerta.Priority</span>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @if (alerta.IsActive)
                                                {
                                                    <span class="badge bg-success"><i class="fas fa-check"></i> Ativo</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary"><i class="fas fa-pause"></i> Inativo</span>
                                                }
                                            </td>
                                            <td>
                                                <small class="text-muted">@alerta.CreatedBy</small>
                                            </td>
                                            <td>
                                                <small class="text-muted">@alerta.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", new { id = alerta.Id })" class="btn btn-outline-info btn-sm" title="Detalhes">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", new { id = alerta.Id })" class="btn btn-outline-primary btn-sm" title="Editar">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <form method="post" action="@Url.Action("Toggle", new { id = alerta.Id })" class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-outline-@(alerta.IsActive ? "warning" : "success") btn-sm" title="@(alerta.IsActive ? "Desativar" : "Ativar")">
                                                            <i class="fas fa-@(alerta.IsActive ? "pause" : "play")"></i>
                                                        </button>
                                                    </form>
                                                    <form method="post" action="@Url.Action("Test", new { id = alerta.Id })" class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-outline-secondary btn-sm" title="Testar Alerta">
                                                            <i class="fas fa-play-circle"></i>
                                                        </button>
                                                    </form>
                                                    <form method="post" action="@Url.Action("Delete", new { id = alerta.Id })" class="d-inline" onsubmit="return confirm('Tem certeza que deseja excluir este alerta?')">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-outline-danger btn-sm" title="Excluir">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-bell-slash fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Nenhum alerta configurado</h5>
                            <p class="text-muted">Crie seu primeiro alerta automático para monitorar o sistema.</p>
                            <a href="@Url.Action("Create")" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Criar Primeiro Alerta
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .table td {
        vertical-align: middle;
    }
    .btn-group .btn {
        margin: 0 1px;
    }
    code {
        max-width: 200px;
        display: inline-block;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>
